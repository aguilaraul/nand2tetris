class Square {
	field int x, y;	// Screen location of the square's top-left cornor
	field int size;	// Length of square, in pixel
	
	constructor Square new(int xV, int yV, int sizeV) {
		let x = xV;
		let y = yV;
		let size = sizeV;
		do draw();
		return this;
	}
	
	// Disposes current square object
	method void dispose() {
		do Memory.deAlloc(this);
		return;
	}
	
	// Draws the square on the screen
	method void draw() {
		do Screen.setColor(true);
		do Screen.drawRectangle(x, y, x+size, y+size);
		return;
	}
	
	// Erases square from screen
	method void erase() {
		do Screen.setColor(false);
		do Screen.drawRectangle(x, y, x+size, y+size);
		return;
	}
	
	// Increments the square size by 2 pixels
	method void incSize() {
		if(((y+size) < 254) & ((x+size) < 510)) {
			do erase();
			let size = size + 2;
			do draw();
		}
		return;
	}
	
	// Decrements the square size by 2 pixels
	method void decSize() {
		if(size > 2) {
			do erase();
			let size = size - 2;
			do draw();
		}
		return;
	}
	
	// Moves the square up 2 pixels
	method void moveUp() {
		if(y > 1) {
			do Screen.setColor(false);
			do Screen.drawRectangle(x, (y+size)-1, x+size, y+size);
			let y = y - 2;
			do Screen.setColor(true);
			do Screen.drawRectangle(x, y, x+size, y+1);
		}
		return;
	}
	
	
	// Move square down 2 pixels
	method void moveDown() {
		if(y+size < 254) {
			do Screen.setColor(false);
			do Screen.drawRectangle(x, y, x+size, y+1);
			let y = y + 2;
			do Screen.setColor(true);
			do Screen.drawRectangle(x, (y+size)-1, x+size, y+size);
		}
		return;
	}

	// Move square down 2 pixels
	method void moveLeft() {
		if(x > 1) {
			do Screen.setColor(false);
			do Screen.drawRectangle((x+size)-1, y, x+size, y+size);
			let x = x - 2;
			do Screen.setColor(true);
			do Screen.drawRectangle(x, y, x+size, y+size);
		}
		return;
	}
	
		// Move square down 2 pixels
	method void moveRight() {
		if(x+size < 510) {
			do Screen.setColor(false);
			do Screen.drawRectangle(x, y, x+1, y+size);
			let x = x + 2;
			do Screen.setColor(true);
			do Screen.drawRectangle(x, y, x+size, y+size);
		}
		return;
	}
}