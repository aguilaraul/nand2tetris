class SquareGame {
	field Square square;
	field int direction;
	
	constructor SquareGame new() {
		let square = Square.new(0, 0, 30);
		let direction = 0;
		return this;
	}
	
	// Dispose of game
	method void dispose() {
		do square.dispose();
		do Memory.deAlloc(this);
		return;
	}
	
	// Move the square
	method void moveSquare() {
		if(direction = 1) { do square.moveUp(); }
		if(direction = 2) { do square.moveDown(); }
		if(direction = 3) { do square.moveLeft(); }
		if(direction = 4) { do square.moveRight(); }
		
		do Sys.wait(5);
		return;
	}
	
	// Run the game
	method void run() {
		var char key;
		var boolen exit;
		let exit = false;
		
		while(~exit) {
			// Waits for a key to be pressed
			while(key = 0) {
				let key = Keyboard.keyPressed();
				do moveSquare();
			}
			if(key = 81) { let exit = true; }		// q key
			if(key = 90) { do square.decSize(); }	// z key
			if(key = 88) { do square.incSize(); }	// x key
			if(key = 131) { let direction = 1; }	// up arrow
			if(key = 133) { let direction = 2; }	// down arrow
			if(key = 130) { let direction = 3; }	// left arrow
			if(key = 132) { let direction = 4; }	// right arrow
			
			// Waits for key to be released
			while(~(key = 0)) {
				let key = Keyboard.keyPressed();
				do moveSquare();
			}
		}
		return;
	}
}